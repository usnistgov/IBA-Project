function [Y,Xf,Af] = psp_fan2(X,~,~)
%MYNEURALNETWORKFUNCTION neural network simulation function.
% 20 nodes, Neural Fitting, LM optimization
% X = [vav1, vav2, Tz1act-Tz1sp, Tz2act-Tz2sp,Psp2Old];
% Auto-generated by MATLAB, 24-Jul-2023 09:28:30.
%
% [Y] = myNeuralNetworkFunction(X,~,~) takes these arguments:
%
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = Qx5 matrix, input #1 at timestep ts.
%
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = Qx1 matrix, output #1 at timestep ts.
%
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [0;0;-11.8596;-7.5267;98.5];
x1_step1.gain = [0.00234814529689098;0.00189021231053693;0.130248187922086;0.183700274631911;0.00235294117647059];
x1_step1.ymin = -1;

% Layer 1
b1 = [1.619916301673609782;1.2285633799517230447;-0.83222989407064495992;-0.34453170701721796965;2.1458523504232398516;2.4325451378221649712;-1.3114928151356626262;0.53464175538666081078;-0.027320635730952339687;0.60502803244245229042;0.10301723939727021329;-0.47078313369119711984;0.12827672697380110289;2.6477307442333284371;-0.30481422701068527914;0.56400676021745477229;-1.2054561070298068781;-1.7841734819539636359;-3.3096207568197364424;-0.81013895580700101551];
IW1_1 = [-0.087506380377533374282 -0.59603175075536085625 0.042173697724677092213 -2.1918254837194162121 0.34437396414712034831;-0.8674393781090846689 0.21398689710543633558 -0.29472931804079560703 1.128261162332275136 1.2197419374907949585;-0.15742904716817218702 0.51670484459153875889 -0.16623555375492526931 0.61387031270019187801 0.46072688290776281361;-0.084566768966133368246 -0.073896660592177948468 -0.074676451839388466314 0.37722767614380325885 0.25918863654047741285;-0.3022958345819773962 2.6314108394228195031 -0.51221127071636585182 -1.4049224664695234566 0.68314086226386849798;0.14282280681912001841 -0.89853790275442313451 -0.13258420002317863884 -3.0749297816258969185 -0.081638946543413207224;0.95757358375210255286 1.6136661206862965567 -0.89664043678874572052 -2.7664326378724894973 1.511596955619038285;-3.3468418364387031438 1.2096933422369757771 0.14791727988245539915 0.30052208347658782017 -2.966749078268246187;-1.2854543003235743281 0.59900009309205337615 0.78500071070675059293 1.0965975390697402236 -1.395799214871509264;1.8949822551396002801 -0.50110429408862067202 2.3057389894723083756 0.095193580895734708491 -2.4551625106083196926;1.8853808160429752494 -0.42551441437812187463 0.90023933186360605152 0.029765067675001661424 1.0990687059331087916;-0.66904855754769254617 0.13447497636743674376 0.21137288665444689539 -1.8139911640845061136 -0.18149071401473046428;-0.67391457282243161231 0.86524783419366135817 0.52436246067496317114 0.69368844003279628296 -1.1984893418863455938;0.14556084436668190185 -0.97854550733055367662 1.3370633030482137471 -2.6855452112200643988 0.066981801625098855157;-0.18309105472615302967 -1.1842285231970284265 2.8591767499946199038 -3.1668298945774124853 -0.50501232046106936391;0.61741650606627895836 -0.22301980332307852484 -0.14827415436834293083 1.6659382373840052605 0.68286669729404458895;-1.071635021114990538 0.89763398192237975337 0.60197338077840834014 -1.3783067895589187213 0.024751524622121386099;-0.32762055811976392716 0.98422016995832872777 0.11954942675546628705 1.682685334925037246 0.44617264991449245848;-1.3943274178561884113 3.1017101600815237816 0.13764109392089365902 -2.2181737000174912566 -3.9890720673013837505;-0.22428485234490633249 -0.22114391422812829102 -0.1064034646245758664 1.2229684327519818599 0.61751205281378029888];

% Layer 2
b2 = -0.44643451618932872282;
LW2_1 = [0.62360894961388102509 0.32654300431638211277 1.7197599722634921982 -3.1262848817273529711 0.037854413306862323696 -0.38216616657240853883 -0.080668733529349362366 -0.062107596878978980903 0.17634668588092497488 0.039140613796033556226 0.054079964072061177671 1.2743979520916328685 -0.37102230410705760999 0.24362633768677255386 0.01094866601342396259 1.2749015147208504484 -0.14652645935552113809 -0.5348036377303531097 0.065516333459430586839 1.2244338297195105358];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 0.00235294117647059;
y1_step1.xoffset = 98.5;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
    X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
    Q = size(X{1},1); % samples/series
else
    Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS
    
    % Input 1
    X{1,ts} = X{1,ts}';
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
    Y{1,ts} = Y{1,ts}';
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
    Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
x = bsxfun(@minus,y,settings.ymin);
x = bsxfun(@rdivide,x,settings.gain);
x = bsxfun(@plus,x,settings.xoffset);
end
