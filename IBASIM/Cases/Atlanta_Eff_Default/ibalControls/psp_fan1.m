function [Y,Xf,Af] = psp_fan1(X,~,~)
%MYNEURALNETWORKFUNCTION neural network simulation function.
% 20 nodes, Neural Fitting, LM optimization
% X = [vav3, vav4, Tz3act-Tz3sp, Tz4act-Tz4sp,Psp1Old];
%
% Auto-generated by MATLAB, 24-Jul-2023 09:22:22.
%
% [Y] = myNeuralNetworkFunction(X,~,~) takes these arguments:
%
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = Qx5 matrix, input #1 at timestep ts.
%
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = Qx1 matrix, output #1 at timestep ts.
%
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [0;0;-12.4896;-12.2629;398.5];
x1_step1.gain = [0.00210437810076825;0.0023083470348157;0.124584200231727;0.1277481827821;0.00334728033472803];
x1_step1.ymin = -1;

% Layer 1
b1 = [-0.2495153606719024697;-2.6543383576542067814;15.916170428299670547;-0.027058189675481549019;-2.0464485177193445509;4.1457539931525930754;1.9027931995305196189;-3.6702671057066043048;-1.7811020878580194893;0.65429444379347989624;0.61444986279508051474;14.398066731247750383;0.39932326078940194591;0.83572281449538399212;-0.10994041742222626645;-0.71737050064644047875;-2.2937813116238032762;-8.6642768363155351352;2.511436600654043616;4.0098180683647433042];
IW1_1 = [0.14789266196753944604 0.86143603643905986011 -1.6914914466225676737 2.3220314371448638191 -0.48715980448411033699;2.5393998400148909411 -1.1890623209450756903 -1.491486650476602227 -2.7050135420554601851 0.87001337685337643002;-9.1876262518712561445 16.93005360087621014 10.129248863907688971 -0.47062841238709679503 -2.3079095566053990929;0.075616838795238477955 4.4935428918453199643 2.5452981923082980131 -0.40219335458209087841 1.3868480886140523989;2.0942174680228720085 -1.3440977744692201856 -2.2793552284449831724 2.345490822340075443 0.12124035076442066239;-0.33761590396449797646 3.578307687697119821 -2.9955937115020065953 -0.26503459512323024327 -3.3490686398157372139;-0.64365734219990611287 1.7341688914829487267 -1.002797498914240748 -0.84399806093952600694 2.7627139705458456653;0.65499614955786578108 -0.29891817412773691309 -2.6512783442178844417 -1.2051539629442442614 1.8771814393632140217;1.0189268713312407133 -0.88823278904491154151 1.7167762151789063285 0.43434877055278225955 -0.33119269861746547523;1.8224959192213412429 -2.5898061595436621118 3.0105024794702441859 -1.7794990324481501087 1.9920624989647313097;-0.036338545329671977091 0.051312548289527852574 -0.2176412278211683482 -0.52975719908057405938 -1.0587198855186510382;1.8598317618203350499 -3.7613785720029970783 2.4812241799499412664 -24.333083819328436448 -8.93810308759356964;0.32278810005260105687 -0.29281921827467277675 0.63537009715544479072 1.1473415663832404743 0.15462320074112259616;-0.197792704397139113 0.39886026296278648262 -0.41747037548531534812 -0.86920766658522807813 0.59104408475713288151;0.92597889627165674842 -2.1778922191448546464 -2.368919656590898537 2.5584424059526278405 0.35319029152733588672;0.12704321244725008677 0.13749504816418856024 0.025403432130782315629 -1.2405462516672083328 -1.6025019375914812958;2.482582508058924109 4.2907247120238993787 3.3050606391352883584 -2.0653221863253725665 -1.7918156511492533411;-3.439032630997418849 2.3851833187797080171 -2.7737746930551736568 6.6553883778709463925 -4.6377511268060285232;1.5326463915839703134 2.1538370294945821115 -0.067081984197481625554 0.78360742953717299475 -2.5437453331395500911;0.57281036541299079623 0.50253436062737699697 -0.10801466178382666816 -1.6337835952702104425 -4.0054637303145614879];

% Layer 2
b2 = -1.1215053029636496973;
LW2_1 = [-0.0211242489335171299 -0.035381952133355001888 -0.02838928724734601089 -0.0027960710433403671189 0.030776226119769271167 -0.0069018387784689338299 -0.045234184879770093779 -0.75607118435165032722 0.056065629591628585171 0.024323808567269886161 -0.61121371193958695667 0.015153882818622670114 0.31903711174641058435 0.66028084303887968343 0.019304213965633521682 -0.23635651073604627137 0.0025166206535924551257 -0.053508317927018315963 -0.002224807774133851293 -0.073425538522293831711];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 0.00334728033472803;
y1_step1.xoffset = 398.5;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
    X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
    Q = size(X{1},1); % samples/series
else
    Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS
    
    % Input 1
    X{1,ts} = X{1,ts}';
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
    Y{1,ts} = Y{1,ts}';
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
    Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
x = bsxfun(@minus,y,settings.ymin);
x = bsxfun(@rdivide,x,settings.gain);
x = bsxfun(@plus,x,settings.xoffset);
end
